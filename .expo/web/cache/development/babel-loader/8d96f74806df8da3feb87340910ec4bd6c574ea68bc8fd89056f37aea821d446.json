{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Create() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Title\",\n      value: title,\n      mode: \"outlined\",\n      onChangeText: function onChangeText(text) {\n        return setTitle(text);\n      },\n      style: styles.titleInput\n    }), _jsx(TextInput, {\n      style: styles.descriptionInput,\n      placeholder: \"Description\",\n      value: description,\n      mode: \"outlined\",\n      multiline: true,\n      numberOfLines: 10,\n      onChangeText: function onChangeText(text) {\n        return setDescription(text);\n      }\n    }), _jsx(TouchableHighlight, {\n      style: styles.button,\n      onPress: function onPress() {\n        return console.log('Button pressed');\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Insert articles\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  titleInput: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 30\n  },\n  descriptionInput: {\n    width: '100%',\n    height: 200,\n    borderColor: 'gray',\n    borderWidth: 1,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 20\n  },\n  buttonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});\nexport default Create;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","FlatList","TouchableOpacity","Alert","TouchableHighlight","TextInput","jsx","_jsx","jsxs","_jsxs","Create","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","style","styles","container","children","placeholder","value","mode","onChangeText","text","titleInput","descriptionInput","multiline","numberOfLines","button","onPress","console","log","buttonText","create","flex","justifyContent","alignItems","backgroundColor","padding","width","height","borderColor","borderWidth","marginBottom","borderRadius","marginTop","color","textAlign","fontWeight","fontSize"],"sources":["C:/Users/BWANDA HC/Vaccines/Screens/Create.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { StyleSheet, View, Text, FlatList, TouchableOpacity, Alert,TouchableHighlight, TextInput} from 'react-native';\r\n// // import { Button } from 'react-native-paper';\r\n\r\n// function Create() {\r\n//     const [title, setTitle] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <TextInput\r\n//                 placeholder='Title'\r\n//                 value={title}\r\n//                 mode='outlined'\r\n//                 onChangeText={text => setTitle(text)}\r\n//                 style={styles.titleInput}\r\n//             />\r\n\r\n//             <TextInput\r\n//                 style={styles.descriptionInput}\r\n//                 placeholder='Description'\r\n//                 value={description}\r\n//                 mode='outlined'\r\n//                 multiline\r\n//                 numberOfLines={10} \r\n//                 onChangeText={text => setDescription(text)}\r\n//             />\r\n\r\n//             <TouchableHighlight\r\n//             style={styles.button}\r\n//             onPress={() => console.log('Button pressed')}\r\n//             >\r\n//             <Text style={styles.buttonText}>Insert articles</Text>\r\n//             </TouchableHighlight>\r\n\r\n//         </View>\r\n//     );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         backgroundColor: '#fff',\r\n//         padding: 20,\r\n//     },\r\n//     titleInput: {\r\n//         width: '100%',\r\n//         height: 40,\r\n//         borderColor: 'gray',\r\n//         borderWidth: 1,\r\n//         padding: 10,\r\n//         marginBottom: 30,\r\n//     },\r\n//     descriptionInput: {\r\n//         width: '100%',\r\n//         height: 200, // set a larger height value for the description input\r\n//         borderColor: 'gray',\r\n//         borderWidth: 1,\r\n//         padding: 10,\r\n//     },\r\n\r\n//     button: {\r\n//         backgroundColor: '#2196F3',\r\n//         padding: 10,\r\n//         borderRadius: 5,\r\n//         marginTop: 20, // add some margin to the top of the button\r\n//     },\r\n//     buttonText: {\r\n//         color: '#fff',\r\n//         textAlign: 'center',\r\n//         fontWeight: 'bold',\r\n//         fontSize: 18,\r\n//       },\r\n// });\r\n\r\n// export default Create;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity, Alert,TouchableHighlight, TextInput} from 'react-native';\r\n// import { Button } from 'react-native-paper';\r\n\r\nfunction Create() {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput\r\n                placeholder='Title'\r\n                value={title}\r\n                mode='outlined'\r\n                onChangeText={text => setTitle(text)}\r\n                style={styles.titleInput}\r\n            />\r\n\r\n            <TextInput\r\n                style={styles.descriptionInput}\r\n                placeholder='Description'\r\n                value={description}\r\n                mode='outlined'\r\n                multiline\r\n                numberOfLines={10} \r\n                onChangeText={text => setDescription(text)}\r\n            />\r\n\r\n            <TouchableHighlight\r\n            style={styles.button}\r\n            onPress={() => console.log('Button pressed')}\r\n            >\r\n            <Text style={styles.buttonText}>Insert articles</Text>\r\n            </TouchableHighlight>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: 20,\r\n    },\r\n    titleInput: {\r\n        width: '100%',\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        marginBottom: 30,\r\n    },\r\n    descriptionInput: {\r\n        width: '100%',\r\n        height: 200, // set a larger height value for the description input\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#2196F3',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginTop: 20, // add some margin to the top of the button\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n      },\r\n});\r\n\r\nexport default Create;\r\n\r\n\r\n"],"mappings":";AAkFA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIxC,SAASC,MAAMA,CAAA,EAAG;EACd,IAAAC,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAsCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,OACIR,KAAA,CAACV,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BhB,IAAA,CAACF,SAAS;MACNmB,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEX,KAAM;MACbY,IAAI,EAAC,UAAU;MACfC,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIb,QAAQ,CAACa,IAAI,CAAC;MAAA,CAAC;MACrCR,KAAK,EAAEC,MAAM,CAACQ;IAAW,EAC3B,EAEFtB,IAAA,CAACF,SAAS;MACNe,KAAK,EAAEC,MAAM,CAACS,gBAAiB;MAC/BN,WAAW,EAAC,aAAa;MACzBC,KAAK,EAAEP,WAAY;MACnBQ,IAAI,EAAC,UAAU;MACfK,SAAS;MACTC,aAAa,EAAE,EAAG;MAClBL,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIT,cAAc,CAACS,IAAI,CAAC;MAAA;IAAC,EAC7C,EAEFrB,IAAA,CAACH,kBAAkB;MACnBgB,KAAK,EAAEC,MAAM,CAACY,MAAO;MACrBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAAA,CAAC;MAAAb,QAAA,EAE7ChB,IAAA,CAACP,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACgB,UAAW;QAAAd,QAAA,EAAC;MAAe;IAAO,EACjC;EAAA,EAElB;AAEf;AAEA,IAAMF,MAAM,GAAGvB,UAAU,CAACwC,MAAM,CAAC;EAC7BhB,SAAS,EAAE;IACPiB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE;EACb,CAAC;EACDd,UAAU,EAAE;IACRe,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdJ,OAAO,EAAE,EAAE;IACXK,YAAY,EAAE;EAClB,CAAC;EACDlB,gBAAgB,EAAE;IACdc,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,GAAG;IACXC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdJ,OAAO,EAAE;EACb,CAAC;EAEDV,MAAM,EAAE;IACJS,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXM,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACf,CAAC;EACDb,UAAU,EAAE;IACRc,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ;AACN,CAAC,CAAC;AAEF,eAAe5C,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}