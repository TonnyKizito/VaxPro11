{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction IssuedVaccineEdit(props) {\n  var _props$route$params$i = props.route.params.item,\n    initialVaccine_name = _props$route$params$i.vaccine_name,\n    initialDistrict = _props$route$params$i.district,\n    initialDate = _props$route$params$i.Date,\n    initialHealth_facility = _props$route$params$i.health_facility,\n    initialIssue_quantity = _props$route$params$i.issue_quantity,\n    initialIssue_by = _props$route$params$i.issue_by,\n    id = _props$route$params$i.id;\n  var _useState = useState(initialVaccine_name),\n    _useState2 = _slicedToArray(_useState, 2),\n    vaccine_name = _useState2[0],\n    setVaccine_name = _useState2[1];\n  var _useState3 = useState(initialDistrict),\n    _useState4 = _slicedToArray(_useState3, 2),\n    district = _useState4[0],\n    setDistrict = _useState4[1];\n  var _useState5 = useState(initialDate),\n    _useState6 = _slicedToArray(_useState5, 2),\n    date = _useState6[0],\n    setDate = _useState6[1];\n  var _useState7 = useState(initialHealth_facility),\n    _useState8 = _slicedToArray(_useState7, 2),\n    health_facility = _useState8[0],\n    setHealth_facility = _useState8[1];\n  var _useState9 = useState(initialIssue_quantity),\n    _useState10 = _slicedToArray(_useState9, 2),\n    issue_quantity = _useState10[0],\n    setIssue_quantity = _useState10[1];\n  var _useState11 = useState(initialIssue_by),\n    _useState12 = _slicedToArray(_useState11, 2),\n    issue_by = _useState12[0],\n    setIssue_by = _useState12[1];\n  var handleSave = function handleSave() {\n    var updatedItem = {\n      vaccine_name: vaccine_name,\n      district: district,\n      Date: date,\n      health_facility: health_facility,\n      issue_quantity: issue_quantity,\n      issue_by: issue_by\n    };\n    var updateData = function updateData() {\n      fetch(\"http://192.168.43.11:8000/api/IssueVaccines/\" + id + \"/\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedItem)\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        props.navigation.navigate('IssuedVaccines', {\n          data: data\n        });\n      }).catch(function (error) {\n        return Alert.alert('Error', error);\n      });\n    };\n    updateData();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Vaccine Name\",\n      value: vaccine_name,\n      onChangeText: function onChangeText(text) {\n        return setVaccine_name(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"District\",\n      value: district,\n      onChangeText: function onChangeText(text) {\n        return setDistrict(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Date\",\n      value: date,\n      onChangeText: function onChangeText(text) {\n        return setDate(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Health Facility\",\n      value: health_facility,\n      onChangeText: function onChangeText(text) {\n        return setHealth_facility(text);\n      },\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Issue quantity\",\n      value: issue_quantity,\n      onChangeText: function onChangeText(text) {\n        return setIssue_quantity(text);\n      },\n      keyboardType: \"numeric\",\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Issue by\",\n      value: issue_by,\n      onChangeText: function onChangeText(text) {\n        return setIssue_by(text);\n      },\n      style: styles.input\n    }), _jsx(TouchableHighlight, {\n      style: styles.button,\n      onPress: handleSave,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Update\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: '#2E64FE',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default IssuedVaccineEdit;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TouchableOpacity","TouchableHighlight","TextInput","Alert","jsx","_jsx","jsxs","_jsxs","IssuedVaccineEdit","props","_props$route$params$i","route","params","item","initialVaccine_name","vaccine_name","initialDistrict","district","initialDate","Date","initialHealth_facility","health_facility","initialIssue_quantity","issue_quantity","initialIssue_by","issue_by","id","_useState","_useState2","_slicedToArray","setVaccine_name","_useState3","_useState4","setDistrict","_useState5","_useState6","date","setDate","_useState7","_useState8","setHealth_facility","_useState9","_useState10","setIssue_quantity","_useState11","_useState12","setIssue_by","handleSave","updatedItem","updateData","fetch","method","headers","body","JSON","stringify","then","resp","json","data","navigation","navigate","catch","error","alert","style","styles","container","children","placeholder","value","onChangeText","text","input","keyboardType","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","padding","width","height","borderWidth","borderColor","borderRadius","marginBottom","paddingHorizontal","paddingVertical","marginTop","color","fontWeight","textAlign"],"sources":["C:/Users/BWANDA HC/Vaccines/Screens/IssuedVaccineEdit.js"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, TouchableHighlight, TextInput, Alert } from 'react-native';\r\n\r\nfunction IssuedVaccineEdit(props) {\r\n  const { vaccine_name: initialVaccine_name, district: initialDistrict, Date: initialDate, health_facility: initialHealth_facility, issue_quantity:initialIssue_quantity, issue_by:initialIssue_by, id } = props.route.params.item;\r\n  \r\n  \r\n  const [vaccine_name, setVaccine_name] = useState(initialVaccine_name);\r\n  const [district, setDistrict] = useState(initialDistrict);\r\n  const [date, setDate] = useState(initialDate);\r\n  const [health_facility, setHealth_facility] = useState(initialHealth_facility);\r\n  const [issue_quantity, setIssue_quantity] = useState(initialIssue_quantity);\r\n  const [issue_by, setIssue_by] = useState(initialIssue_by);\r\n\r\n  const handleSave = () => {\r\n    const updatedItem = { vaccine_name, district, Date: date, health_facility, issue_quantity:issue_quantity,issue_by:issue_by };\r\n    // Add your save functionality here\r\n  \r\n    const updateData = () => {\r\n      fetch(`http://192.168.43.11:8000/api/IssueVaccines/${id}/`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updatedItem)\r\n      })\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        props.navigation.navigate('IssuedVaccines', {data: data})\r\n      })\r\n      .catch(error => Alert.alert('Error', error))\r\n    }\r\n\r\n    updateData(); // call the updateData function here\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder=\"Vaccine Name\"\r\n        value={vaccine_name}\r\n        onChangeText={text => setVaccine_name(text)}\r\n        style={styles.input}\r\n      />\r\n\r\n      <TextInput\r\n        placeholder=\"District\"\r\n        value={district}\r\n        onChangeText={text => setDistrict(text)}\r\n        style={styles.input}\r\n      />\r\n\r\n      <TextInput\r\n        placeholder=\"Date\"\r\n        value={date}\r\n        onChangeText={text => setDate(text)}\r\n        style={styles.input}\r\n      />\r\n\r\n      <TextInput\r\n        placeholder=\"Health Facility\"\r\n        value={health_facility}\r\n        onChangeText={text => setHealth_facility(text)}\r\n        style={styles.input}\r\n      />\r\n\r\n    <TextInput\r\n      placeholder=\"Issue quantity\"\r\n      value={issue_quantity}\r\n      onChangeText={text => setIssue_quantity(text)}\r\n      keyboardType=\"numeric\"\r\n      style={styles.input}\r\n    />\r\n\r\n\r\n\r\n       <TextInput\r\n        placeholder=\"Issue by\"\r\n        value={issue_by}\r\n        onChangeText={text => setIssue_by(text)}\r\n        style={styles.input}\r\n      />\r\n\r\n      <TouchableHighlight style={styles.button} onPress={handleSave}>\r\n        <Text style={styles.buttonText}>Update</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    padding: 20\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10\r\n  },\r\n  button: {\r\n    backgroundColor: '#2E64FE',\r\n    borderRadius: 5,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    marginTop: 10\r\n  },\r\n    buttonText: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n      textAlign: 'center'\r\n    }\r\n  });\r\n  \r\n  export default IssuedVaccineEdit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}